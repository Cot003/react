{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","console","log","target","backgroundColor","newText","split","length","App","setmode","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af43a771.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase(); \r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  About\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n\r\n            <div className={`form-check form-switch text-${props.mode==='light'? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode}   role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nnavbar.propTypes = { title: PropTypes.string }\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n  // setText(\"New Text\");\r\n  const handleUpClick = () => {\r\n    console.log(\"uppercase was clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n  }\r\n  \r\n  const handleLoClick = () => {\r\n    console.log(\"uppercase was clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n  }\r\n  function handleOnChange(event) {\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n  }\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color : props.mode==='dark'? 'white' : '#042743'}}>\r\n\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode==='dark'? 'grey' : 'white' , color: props.mode==='dark'? 'white' : '#042743'} }></textarea> \r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert To Lowercase</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color : props.mode==='dark'? 'white' : '#042743'}} \r\n    >\r\n      <h1>Your text Summary</h1>\r\n      <p> {text.split(\" \").length} words {text.length} charecters</p>\r\n      <p>{0.008 * text.split(\" \").length}minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in the text box above to preview here\"}</p>\r\n    </div>\r\n      </>\r\n\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500)\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode Hass been Enabled\", \"success\")\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode Hass been Enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <div className=\"container my-3\">\n          <Alert alert={alert} />\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze Below\" mode={mode} />\n              \n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}